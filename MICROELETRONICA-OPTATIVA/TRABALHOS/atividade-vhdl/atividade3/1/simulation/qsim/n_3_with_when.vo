// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "06/13/2022 22:56:24"

// 
// Device: Altera EP3C10E144C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module address_decoder (
	x,
	y);
input 	[2:0] x;
output 	[7:0] y;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \y[0]~output_o ;
wire \y[1]~output_o ;
wire \y[2]~output_o ;
wire \y[3]~output_o ;
wire \y[4]~output_o ;
wire \y[5]~output_o ;
wire \y[6]~output_o ;
wire \y[7]~output_o ;
wire \x[2]~input_o ;
wire \x[0]~input_o ;
wire \x[1]~input_o ;
wire \Equal6~0_combout ;
wire \Equal6~1_combout ;
wire \Equal6~2_combout ;
wire \Equal6~3_combout ;
wire \Equal6~4_combout ;
wire \y~0_combout ;
wire \Equal6~5_combout ;
wire \y~1_combout ;


cycloneiii_io_obuf \y[0]~output (
	.i(\Equal6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[0]~output .bus_hold = "false";
defparam \y[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[1]~output (
	.i(\Equal6~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[1]~output .bus_hold = "false";
defparam \y[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[2]~output (
	.i(\Equal6~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[2]~output .bus_hold = "false";
defparam \y[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[3]~output (
	.i(\Equal6~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[3]~output .bus_hold = "false";
defparam \y[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[4]~output (
	.i(\Equal6~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[4]~output .bus_hold = "false";
defparam \y[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[5]~output (
	.i(\y~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[5]~output .bus_hold = "false";
defparam \y[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[6]~output (
	.i(\Equal6~5_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[6]~output .bus_hold = "false";
defparam \y[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \y[7]~output (
	.i(!\y~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[7]~output .bus_hold = "false";
defparam \y[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_ibuf \x[2]~input (
	.i(x[2]),
	.ibar(gnd),
	.o(\x[2]~input_o ));
// synopsys translate_off
defparam \x[2]~input .bus_hold = "false";
defparam \x[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \x[0]~input (
	.i(x[0]),
	.ibar(gnd),
	.o(\x[0]~input_o ));
// synopsys translate_off
defparam \x[0]~input .bus_hold = "false";
defparam \x[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \x[1]~input (
	.i(x[1]),
	.ibar(gnd),
	.o(\x[1]~input_o ));
// synopsys translate_off
defparam \x[1]~input .bus_hold = "false";
defparam \x[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~0 (
// Equation(s):
// \Equal6~0_combout  = (!\x[2]~input_o  & (!\x[0]~input_o  & !\x[1]~input_o ))

	.dataa(gnd),
	.datab(\x[2]~input_o ),
	.datac(\x[0]~input_o ),
	.datad(\x[1]~input_o ),
	.cin(gnd),
	.combout(\Equal6~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~0 .lut_mask = 16'h0003;
defparam \Equal6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~1 (
// Equation(s):
// \Equal6~1_combout  = (\x[0]~input_o  & (!\x[2]~input_o  & !\x[1]~input_o ))

	.dataa(\x[0]~input_o ),
	.datab(gnd),
	.datac(\x[2]~input_o ),
	.datad(\x[1]~input_o ),
	.cin(gnd),
	.combout(\Equal6~1_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~1 .lut_mask = 16'h000A;
defparam \Equal6~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~2 (
// Equation(s):
// \Equal6~2_combout  = (\x[1]~input_o  & (!\x[2]~input_o  & !\x[0]~input_o ))

	.dataa(\x[1]~input_o ),
	.datab(gnd),
	.datac(\x[2]~input_o ),
	.datad(\x[0]~input_o ),
	.cin(gnd),
	.combout(\Equal6~2_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~2 .lut_mask = 16'h000A;
defparam \Equal6~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~3 (
// Equation(s):
// \Equal6~3_combout  = (\x[0]~input_o  & (\x[1]~input_o  & !\x[2]~input_o ))

	.dataa(\x[0]~input_o ),
	.datab(\x[1]~input_o ),
	.datac(gnd),
	.datad(\x[2]~input_o ),
	.cin(gnd),
	.combout(\Equal6~3_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~3 .lut_mask = 16'h0088;
defparam \Equal6~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~4 (
// Equation(s):
// \Equal6~4_combout  = (\x[2]~input_o  & (!\x[0]~input_o  & !\x[1]~input_o ))

	.dataa(\x[2]~input_o ),
	.datab(gnd),
	.datac(\x[0]~input_o ),
	.datad(\x[1]~input_o ),
	.cin(gnd),
	.combout(\Equal6~4_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~4 .lut_mask = 16'h000A;
defparam \Equal6~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \y~0 (
// Equation(s):
// \y~0_combout  = (\x[2]~input_o  & (\x[0]~input_o  & !\x[1]~input_o ))

	.dataa(\x[2]~input_o ),
	.datab(\x[0]~input_o ),
	.datac(gnd),
	.datad(\x[1]~input_o ),
	.cin(gnd),
	.combout(\y~0_combout ),
	.cout());
// synopsys translate_off
defparam \y~0 .lut_mask = 16'h0088;
defparam \y~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \Equal6~5 (
// Equation(s):
// \Equal6~5_combout  = (\x[2]~input_o  & (\x[1]~input_o  & !\x[0]~input_o ))

	.dataa(\x[2]~input_o ),
	.datab(\x[1]~input_o ),
	.datac(gnd),
	.datad(\x[0]~input_o ),
	.cin(gnd),
	.combout(\Equal6~5_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~5 .lut_mask = 16'h0088;
defparam \Equal6~5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \y~1 (
// Equation(s):
// \y~1_combout  = ((!\x[1]~input_o ) # (!\x[0]~input_o )) # (!\x[2]~input_o )

	.dataa(gnd),
	.datab(\x[2]~input_o ),
	.datac(\x[0]~input_o ),
	.datad(\x[1]~input_o ),
	.cin(gnd),
	.combout(\y~1_combout ),
	.cout());
// synopsys translate_off
defparam \y~1 .lut_mask = 16'h3FFF;
defparam \y~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign y[0] = \y[0]~output_o ;

assign y[1] = \y[1]~output_o ;

assign y[2] = \y[2]~output_o ;

assign y[3] = \y[3]~output_o ;

assign y[4] = \y[4]~output_o ;

assign y[5] = \y[5]~output_o ;

assign y[6] = \y[6]~output_o ;

assign y[7] = \y[7]~output_o ;

endmodule
